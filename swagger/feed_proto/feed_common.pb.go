// Code generated by protoc-gen-go. DO NOT EDIT.
// source: feed_proto/feed_common.proto

package feed_api

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Product int32

const (
	Product_REC         Product = 0
	Product_VIDEO       Product = 1
	Product_MICRO_VIDEO Product = 2
)

var Product_name = map[int32]string{
	0: "REC",
	1: "VIDEO",
	2: "MICRO_VIDEO",
}

var Product_value = map[string]int32{
	"REC":         0,
	"VIDEO":       1,
	"MICRO_VIDEO": 2,
}

func (x Product) String() string {
	return proto.EnumName(Product_name, int32(x))
}

func (Product) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3b4505af3af46d7a, []int{0}
}

type SceneId int32

const (
	SceneId_FAKE_SCENE      SceneId = 0
	SceneId_VIVO_RECOM_PAGE SceneId = 1300
	SceneId_VIVO_RECOM_TEST SceneId = 10001
)

var SceneId_name = map[int32]string{
	0:     "FAKE_SCENE",
	1300:  "VIVO_RECOM_PAGE",
	10001: "VIVO_RECOM_TEST",
}

var SceneId_value = map[string]int32{
	"FAKE_SCENE":      0,
	"VIVO_RECOM_PAGE": 1300,
	"VIVO_RECOM_TEST": 10001,
}

func (x SceneId) String() string {
	return proto.EnumName(SceneId_name, int32(x))
}

func (SceneId) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3b4505af3af46d7a, []int{1}
}

type ItemType int32

const (
	ItemType_FAKE_TYPE   ItemType = 0
	ItemType_SHORT_VIDEO ItemType = 1
	ItemType_SMALL_VIDEO ItemType = 2
)

var ItemType_name = map[int32]string{
	0: "FAKE_TYPE",
	1: "SHORT_VIDEO",
	2: "SMALL_VIDEO",
}

var ItemType_value = map[string]int32{
	"FAKE_TYPE":   0,
	"SHORT_VIDEO": 1,
	"SMALL_VIDEO": 2,
}

func (x ItemType) String() string {
	return proto.EnumName(ItemType_name, int32(x))
}

func (ItemType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3b4505af3af46d7a, []int{2}
}

type ChannelType int32

const (
	ChannelType_FAKE_CHANNEL ChannelType = 0
	ChannelType_SPORTS       ChannelType = 1
	ChannelType_MUSIC        ChannelType = 2
)

var ChannelType_name = map[int32]string{
	0: "FAKE_CHANNEL",
	1: "SPORTS",
	2: "MUSIC",
}

var ChannelType_value = map[string]int32{
	"FAKE_CHANNEL": 0,
	"SPORTS":       1,
	"MUSIC":        2,
}

func (x ChannelType) String() string {
	return proto.EnumName(ChannelType_name, int32(x))
}

func (ChannelType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3b4505af3af46d7a, []int{3}
}

type ItemInfo struct {
	ItemId        string            `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	ItemType      ItemType          `protobuf:"varint,2,opt,name=item_type,json=itemType,proto3,enum=feed.api.ItemType" json:"item_type,omitempty"`
	TraceId       string            `protobuf:"bytes,3,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	ExtraInfo     map[string]string `protobuf:"bytes,4,rep,name=extra_info,json=extraInfo,proto3" json:"extra_info,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Title         string            `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Author        string            `protobuf:"bytes,6,opt,name=author,proto3" json:"author,omitempty"`
	CoverImg      string            `protobuf:"bytes,7,opt,name=cover_img,json=coverImg,proto3" json:"cover_img,omitempty"`
	VideoDuration uint64            `protobuf:"varint,8,opt,name=video_duration,json=videoDuration,proto3" json:"video_duration,omitempty"`
	UpCount       uint64            `protobuf:"varint,9,opt,name=up_count,json=upCount,proto3" json:"up_count,omitempty"`
	//  5 ~ 20 位置预留给上游 以下为内部使用字段
	DuplicateId          []string           `protobuf:"bytes,21,rep,name=duplicate_id,json=duplicateId,proto3" json:"duplicate_id,omitempty"`
	PredictScores        map[string]float32 `protobuf:"bytes,22,rep,name=predict_scores,json=predictScores,proto3" json:"predict_scores,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
	QueueType            uint64             `protobuf:"varint,23,opt,name=queue_type,json=queueType,proto3" json:"queue_type,omitempty"`
	RecId                []string           `protobuf:"bytes,24,rep,name=rec_id,json=recId,proto3" json:"rec_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ItemInfo) Reset()         { *m = ItemInfo{} }
func (m *ItemInfo) String() string { return proto.CompactTextString(m) }
func (*ItemInfo) ProtoMessage()    {}
func (*ItemInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4505af3af46d7a, []int{0}
}

func (m *ItemInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ItemInfo.Unmarshal(m, b)
}
func (m *ItemInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ItemInfo.Marshal(b, m, deterministic)
}
func (m *ItemInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ItemInfo.Merge(m, src)
}
func (m *ItemInfo) XXX_Size() int {
	return xxx_messageInfo_ItemInfo.Size(m)
}
func (m *ItemInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ItemInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ItemInfo proto.InternalMessageInfo

func (m *ItemInfo) GetItemId() string {
	if m != nil {
		return m.ItemId
	}
	return ""
}

func (m *ItemInfo) GetItemType() ItemType {
	if m != nil {
		return m.ItemType
	}
	return ItemType_FAKE_TYPE
}

func (m *ItemInfo) GetTraceId() string {
	if m != nil {
		return m.TraceId
	}
	return ""
}

func (m *ItemInfo) GetExtraInfo() map[string]string {
	if m != nil {
		return m.ExtraInfo
	}
	return nil
}

func (m *ItemInfo) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ItemInfo) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *ItemInfo) GetCoverImg() string {
	if m != nil {
		return m.CoverImg
	}
	return ""
}

func (m *ItemInfo) GetVideoDuration() uint64 {
	if m != nil {
		return m.VideoDuration
	}
	return 0
}

func (m *ItemInfo) GetUpCount() uint64 {
	if m != nil {
		return m.UpCount
	}
	return 0
}

func (m *ItemInfo) GetDuplicateId() []string {
	if m != nil {
		return m.DuplicateId
	}
	return nil
}

func (m *ItemInfo) GetPredictScores() map[string]float32 {
	if m != nil {
		return m.PredictScores
	}
	return nil
}

func (m *ItemInfo) GetQueueType() uint64 {
	if m != nil {
		return m.QueueType
	}
	return 0
}

func (m *ItemInfo) GetRecId() []string {
	if m != nil {
		return m.RecId
	}
	return nil
}

type CommonRequest struct {
	DeviceInfo           *DeviceInfo   `protobuf:"bytes,1,opt,name=device_info,json=deviceInfo,proto3" json:"device_info,omitempty"`
	LocationInfo         *LocationInfo `protobuf:"bytes,2,opt,name=location_info,json=locationInfo,proto3" json:"location_info,omitempty"`
	NetworkInfo          *NetworkInfo  `protobuf:"bytes,3,opt,name=network_info,json=networkInfo,proto3" json:"network_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CommonRequest) Reset()         { *m = CommonRequest{} }
func (m *CommonRequest) String() string { return proto.CompactTextString(m) }
func (*CommonRequest) ProtoMessage()    {}
func (*CommonRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4505af3af46d7a, []int{1}
}

func (m *CommonRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonRequest.Unmarshal(m, b)
}
func (m *CommonRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonRequest.Marshal(b, m, deterministic)
}
func (m *CommonRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonRequest.Merge(m, src)
}
func (m *CommonRequest) XXX_Size() int {
	return xxx_messageInfo_CommonRequest.Size(m)
}
func (m *CommonRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommonRequest proto.InternalMessageInfo

func (m *CommonRequest) GetDeviceInfo() *DeviceInfo {
	if m != nil {
		return m.DeviceInfo
	}
	return nil
}

func (m *CommonRequest) GetLocationInfo() *LocationInfo {
	if m != nil {
		return m.LocationInfo
	}
	return nil
}

func (m *CommonRequest) GetNetworkInfo() *NetworkInfo {
	if m != nil {
		return m.NetworkInfo
	}
	return nil
}

type DeviceInfo struct {
	AndroidId            string   `protobuf:"bytes,1,opt,name=android_id,json=androidId,proto3" json:"android_id,omitempty"`
	Imei                 string   `protobuf:"bytes,2,opt,name=imei,proto3" json:"imei,omitempty"`
	SuperUser            int64    `protobuf:"varint,3,opt,name=super_user,json=superUser,proto3" json:"super_user,omitempty"`
	Language             string   `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	Manufacturer         string   `protobuf:"bytes,5,opt,name=manufacturer,proto3" json:"manufacturer,omitempty"`
	ModelName            string   `protobuf:"bytes,6,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"`
	OsVersion            string   `protobuf:"bytes,7,opt,name=os_version,json=osVersion,proto3" json:"os_version,omitempty"`
	Resolution           string   `protobuf:"bytes,8,opt,name=resolution,proto3" json:"resolution,omitempty"`
	MacAddr              string   `protobuf:"bytes,9,opt,name=mac_addr,json=macAddr,proto3" json:"mac_addr,omitempty"`
	ClientVersion        string   `protobuf:"bytes,10,opt,name=client_version,json=clientVersion,proto3" json:"client_version,omitempty"`
	Udid                 string   `protobuf:"bytes,11,opt,name=udid,proto3" json:"udid,omitempty"`
	Oaid                 string   `protobuf:"bytes,12,opt,name=oaid,proto3" json:"oaid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceInfo) Reset()         { *m = DeviceInfo{} }
func (m *DeviceInfo) String() string { return proto.CompactTextString(m) }
func (*DeviceInfo) ProtoMessage()    {}
func (*DeviceInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4505af3af46d7a, []int{2}
}

func (m *DeviceInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceInfo.Unmarshal(m, b)
}
func (m *DeviceInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceInfo.Marshal(b, m, deterministic)
}
func (m *DeviceInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceInfo.Merge(m, src)
}
func (m *DeviceInfo) XXX_Size() int {
	return xxx_messageInfo_DeviceInfo.Size(m)
}
func (m *DeviceInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceInfo proto.InternalMessageInfo

func (m *DeviceInfo) GetAndroidId() string {
	if m != nil {
		return m.AndroidId
	}
	return ""
}

func (m *DeviceInfo) GetImei() string {
	if m != nil {
		return m.Imei
	}
	return ""
}

func (m *DeviceInfo) GetSuperUser() int64 {
	if m != nil {
		return m.SuperUser
	}
	return 0
}

func (m *DeviceInfo) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *DeviceInfo) GetManufacturer() string {
	if m != nil {
		return m.Manufacturer
	}
	return ""
}

func (m *DeviceInfo) GetModelName() string {
	if m != nil {
		return m.ModelName
	}
	return ""
}

func (m *DeviceInfo) GetOsVersion() string {
	if m != nil {
		return m.OsVersion
	}
	return ""
}

func (m *DeviceInfo) GetResolution() string {
	if m != nil {
		return m.Resolution
	}
	return ""
}

func (m *DeviceInfo) GetMacAddr() string {
	if m != nil {
		return m.MacAddr
	}
	return ""
}

func (m *DeviceInfo) GetClientVersion() string {
	if m != nil {
		return m.ClientVersion
	}
	return ""
}

func (m *DeviceInfo) GetUdid() string {
	if m != nil {
		return m.Udid
	}
	return ""
}

func (m *DeviceInfo) GetOaid() string {
	if m != nil {
		return m.Oaid
	}
	return ""
}

//位置相关信息
//目的：LBS相关推荐
type LocationInfo struct {
	Longitude            float32  `protobuf:"fixed32,1,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Latitude             float32  `protobuf:"fixed32,2,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Timezone             string   `protobuf:"bytes,3,opt,name=timezone,proto3" json:"timezone,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LocationInfo) Reset()         { *m = LocationInfo{} }
func (m *LocationInfo) String() string { return proto.CompactTextString(m) }
func (*LocationInfo) ProtoMessage()    {}
func (*LocationInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4505af3af46d7a, []int{3}
}

func (m *LocationInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LocationInfo.Unmarshal(m, b)
}
func (m *LocationInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LocationInfo.Marshal(b, m, deterministic)
}
func (m *LocationInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LocationInfo.Merge(m, src)
}
func (m *LocationInfo) XXX_Size() int {
	return xxx_messageInfo_LocationInfo.Size(m)
}
func (m *LocationInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LocationInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LocationInfo proto.InternalMessageInfo

func (m *LocationInfo) GetLongitude() float32 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *LocationInfo) GetLatitude() float32 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *LocationInfo) GetTimezone() string {
	if m != nil {
		return m.Timezone
	}
	return ""
}

//网络相关信息
//目的：网络相关过滤
type NetworkInfo struct {
	Imsi                 string   `protobuf:"bytes,1,opt,name=imsi,proto3" json:"imsi,omitempty"`
	NetworkType          string   `protobuf:"bytes,2,opt,name=network_type,json=networkType,proto3" json:"network_type,omitempty"`
	NetworkOperator      string   `protobuf:"bytes,3,opt,name=network_operator,json=networkOperator,proto3" json:"network_operator,omitempty"`
	PhoneNumber          string   `protobuf:"bytes,4,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	ClientIp             string   `protobuf:"bytes,5,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`
	WifiSsid             string   `protobuf:"bytes,6,opt,name=wifi_ssid,json=wifiSsid,proto3" json:"wifi_ssid,omitempty"`
	WifiBssid            string   `protobuf:"bytes,7,opt,name=wifi_bssid,json=wifiBssid,proto3" json:"wifi_bssid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInfo) Reset()         { *m = NetworkInfo{} }
func (m *NetworkInfo) String() string { return proto.CompactTextString(m) }
func (*NetworkInfo) ProtoMessage()    {}
func (*NetworkInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4505af3af46d7a, []int{4}
}

func (m *NetworkInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkInfo.Unmarshal(m, b)
}
func (m *NetworkInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkInfo.Marshal(b, m, deterministic)
}
func (m *NetworkInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInfo.Merge(m, src)
}
func (m *NetworkInfo) XXX_Size() int {
	return xxx_messageInfo_NetworkInfo.Size(m)
}
func (m *NetworkInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInfo.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInfo proto.InternalMessageInfo

func (m *NetworkInfo) GetImsi() string {
	if m != nil {
		return m.Imsi
	}
	return ""
}

func (m *NetworkInfo) GetNetworkType() string {
	if m != nil {
		return m.NetworkType
	}
	return ""
}

func (m *NetworkInfo) GetNetworkOperator() string {
	if m != nil {
		return m.NetworkOperator
	}
	return ""
}

func (m *NetworkInfo) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *NetworkInfo) GetClientIp() string {
	if m != nil {
		return m.ClientIp
	}
	return ""
}

func (m *NetworkInfo) GetWifiSsid() string {
	if m != nil {
		return m.WifiSsid
	}
	return ""
}

func (m *NetworkInfo) GetWifiBssid() string {
	if m != nil {
		return m.WifiBssid
	}
	return ""
}

type ItemQueue struct {
	ItemList             []*ItemInfo `protobuf:"bytes,1,rep,name=item_list,json=itemList,proto3" json:"item_list,omitempty"`
	Size                 int32       `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Weight               int32       `protobuf:"varint,3,opt,name=weight,proto3" json:"weight,omitempty"`
	RecId                string      `protobuf:"bytes,4,opt,name=rec_id,json=recId,proto3" json:"rec_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ItemQueue) Reset()         { *m = ItemQueue{} }
func (m *ItemQueue) String() string { return proto.CompactTextString(m) }
func (*ItemQueue) ProtoMessage()    {}
func (*ItemQueue) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4505af3af46d7a, []int{5}
}

func (m *ItemQueue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ItemQueue.Unmarshal(m, b)
}
func (m *ItemQueue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ItemQueue.Marshal(b, m, deterministic)
}
func (m *ItemQueue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ItemQueue.Merge(m, src)
}
func (m *ItemQueue) XXX_Size() int {
	return xxx_messageInfo_ItemQueue.Size(m)
}
func (m *ItemQueue) XXX_DiscardUnknown() {
	xxx_messageInfo_ItemQueue.DiscardUnknown(m)
}

var xxx_messageInfo_ItemQueue proto.InternalMessageInfo

func (m *ItemQueue) GetItemList() []*ItemInfo {
	if m != nil {
		return m.ItemList
	}
	return nil
}

func (m *ItemQueue) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *ItemQueue) GetWeight() int32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *ItemQueue) GetRecId() string {
	if m != nil {
		return m.RecId
	}
	return ""
}

type UserInfo struct {
	IssuedListInfo       *HistoryInfo `protobuf:"bytes,1,opt,name=issued_list_info,json=issuedListInfo,proto3" json:"issued_list_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *UserInfo) Reset()         { *m = UserInfo{} }
func (m *UserInfo) String() string { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()    {}
func (*UserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4505af3af46d7a, []int{6}
}

func (m *UserInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserInfo.Unmarshal(m, b)
}
func (m *UserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserInfo.Marshal(b, m, deterministic)
}
func (m *UserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfo.Merge(m, src)
}
func (m *UserInfo) XXX_Size() int {
	return xxx_messageInfo_UserInfo.Size(m)
}
func (m *UserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfo proto.InternalMessageInfo

func (m *UserInfo) GetIssuedListInfo() *HistoryInfo {
	if m != nil {
		return m.IssuedListInfo
	}
	return nil
}

type HistoryInfo struct {
	HistoryTermList      []*HistoryTerm `protobuf:"bytes,1,rep,name=history_term_list,json=historyTermList,proto3" json:"history_term_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *HistoryInfo) Reset()         { *m = HistoryInfo{} }
func (m *HistoryInfo) String() string { return proto.CompactTextString(m) }
func (*HistoryInfo) ProtoMessage()    {}
func (*HistoryInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4505af3af46d7a, []int{7}
}

func (m *HistoryInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoryInfo.Unmarshal(m, b)
}
func (m *HistoryInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoryInfo.Marshal(b, m, deterministic)
}
func (m *HistoryInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoryInfo.Merge(m, src)
}
func (m *HistoryInfo) XXX_Size() int {
	return xxx_messageInfo_HistoryInfo.Size(m)
}
func (m *HistoryInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoryInfo.DiscardUnknown(m)
}

var xxx_messageInfo_HistoryInfo proto.InternalMessageInfo

func (m *HistoryInfo) GetHistoryTermList() []*HistoryTerm {
	if m != nil {
		return m.HistoryTermList
	}
	return nil
}

type HistoryTerm struct {
	ItemId               string   `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	Ts                   uint64   `protobuf:"varint,2,opt,name=ts,proto3" json:"ts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HistoryTerm) Reset()         { *m = HistoryTerm{} }
func (m *HistoryTerm) String() string { return proto.CompactTextString(m) }
func (*HistoryTerm) ProtoMessage()    {}
func (*HistoryTerm) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4505af3af46d7a, []int{8}
}

func (m *HistoryTerm) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoryTerm.Unmarshal(m, b)
}
func (m *HistoryTerm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoryTerm.Marshal(b, m, deterministic)
}
func (m *HistoryTerm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoryTerm.Merge(m, src)
}
func (m *HistoryTerm) XXX_Size() int {
	return xxx_messageInfo_HistoryTerm.Size(m)
}
func (m *HistoryTerm) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoryTerm.DiscardUnknown(m)
}

var xxx_messageInfo_HistoryTerm proto.InternalMessageInfo

func (m *HistoryTerm) GetItemId() string {
	if m != nil {
		return m.ItemId
	}
	return ""
}

func (m *HistoryTerm) GetTs() uint64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

type StrategyInfo struct {
	MobilUserModel    *MobilUserModel    `protobuf:"bytes,1,opt,name=mobil_user_model,json=mobilUserModel,proto3" json:"mobil_user_model,omitempty"`
	FollowInfo        []*FollowInfo      `protobuf:"bytes,2,rep,name=follow_info,json=followInfo,proto3" json:"follow_info,omitempty"`
	PositiveItems     []string           `protobuf:"bytes,3,rep,name=positive_items,json=positiveItems,proto3" json:"positive_items,omitempty"`
	Tag3DislikeFactor map[string]float64 `protobuf:"bytes,6,rep,name=tag3_dislike_factor,json=tag3DislikeFactor,proto3" json:"tag3_dislike_factor,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	Tag2DislikeFactor map[string]float64 `protobuf:"bytes,9,rep,name=tag2_dislike_factor,json=tag2DislikeFactor,proto3" json:"tag2_dislike_factor,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	Tag1DislikeFactor map[string]float64 `protobuf:"bytes,10,rep,name=tag1_dislike_factor,json=tag1DislikeFactor,proto3" json:"tag1_dislike_factor,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	IssuedAuthors     []string           `protobuf:"bytes,11,rep,name=issued_authors,json=issuedAuthors,proto3" json:"issued_authors,omitempty"`
	// 当前extra内容：
	//is_new_user            是否新用户
	//is_new_session         是否新session
	ExtraInfo            map[string]string `protobuf:"bytes,4,rep,name=extra_info,json=extraInfo,proto3" json:"extra_info,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *StrategyInfo) Reset()         { *m = StrategyInfo{} }
func (m *StrategyInfo) String() string { return proto.CompactTextString(m) }
func (*StrategyInfo) ProtoMessage()    {}
func (*StrategyInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4505af3af46d7a, []int{9}
}

func (m *StrategyInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StrategyInfo.Unmarshal(m, b)
}
func (m *StrategyInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StrategyInfo.Marshal(b, m, deterministic)
}
func (m *StrategyInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StrategyInfo.Merge(m, src)
}
func (m *StrategyInfo) XXX_Size() int {
	return xxx_messageInfo_StrategyInfo.Size(m)
}
func (m *StrategyInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_StrategyInfo.DiscardUnknown(m)
}

var xxx_messageInfo_StrategyInfo proto.InternalMessageInfo

func (m *StrategyInfo) GetMobilUserModel() *MobilUserModel {
	if m != nil {
		return m.MobilUserModel
	}
	return nil
}

func (m *StrategyInfo) GetFollowInfo() []*FollowInfo {
	if m != nil {
		return m.FollowInfo
	}
	return nil
}

func (m *StrategyInfo) GetPositiveItems() []string {
	if m != nil {
		return m.PositiveItems
	}
	return nil
}

func (m *StrategyInfo) GetTag3DislikeFactor() map[string]float64 {
	if m != nil {
		return m.Tag3DislikeFactor
	}
	return nil
}

func (m *StrategyInfo) GetTag2DislikeFactor() map[string]float64 {
	if m != nil {
		return m.Tag2DislikeFactor
	}
	return nil
}

func (m *StrategyInfo) GetTag1DislikeFactor() map[string]float64 {
	if m != nil {
		return m.Tag1DislikeFactor
	}
	return nil
}

func (m *StrategyInfo) GetIssuedAuthors() []string {
	if m != nil {
		return m.IssuedAuthors
	}
	return nil
}

func (m *StrategyInfo) GetExtraInfo() map[string]string {
	if m != nil {
		return m.ExtraInfo
	}
	return nil
}

type FollowInfo struct {
	FollowPartner        string   `protobuf:"bytes,1,opt,name=follow_partner,json=followPartner,proto3" json:"follow_partner,omitempty"`
	FollowId             string   `protobuf:"bytes,2,opt,name=follow_id,json=followId,proto3" json:"follow_id,omitempty"`
	FollowChannel        string   `protobuf:"bytes,3,opt,name=follow_channel,json=followChannel,proto3" json:"follow_channel,omitempty"`
	FollowTime           uint64   `protobuf:"varint,4,opt,name=follow_time,json=followTime,proto3" json:"follow_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FollowInfo) Reset()         { *m = FollowInfo{} }
func (m *FollowInfo) String() string { return proto.CompactTextString(m) }
func (*FollowInfo) ProtoMessage()    {}
func (*FollowInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4505af3af46d7a, []int{10}
}

func (m *FollowInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FollowInfo.Unmarshal(m, b)
}
func (m *FollowInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FollowInfo.Marshal(b, m, deterministic)
}
func (m *FollowInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FollowInfo.Merge(m, src)
}
func (m *FollowInfo) XXX_Size() int {
	return xxx_messageInfo_FollowInfo.Size(m)
}
func (m *FollowInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FollowInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FollowInfo proto.InternalMessageInfo

func (m *FollowInfo) GetFollowPartner() string {
	if m != nil {
		return m.FollowPartner
	}
	return ""
}

func (m *FollowInfo) GetFollowId() string {
	if m != nil {
		return m.FollowId
	}
	return ""
}

func (m *FollowInfo) GetFollowChannel() string {
	if m != nil {
		return m.FollowChannel
	}
	return ""
}

func (m *FollowInfo) GetFollowTime() uint64 {
	if m != nil {
		return m.FollowTime
	}
	return 0
}

func init() {
	proto.RegisterEnum("feed.api.Product", Product_name, Product_value)
	proto.RegisterEnum("feed.api.SceneId", SceneId_name, SceneId_value)
	proto.RegisterEnum("feed.api.ItemType", ItemType_name, ItemType_value)
	proto.RegisterEnum("feed.api.ChannelType", ChannelType_name, ChannelType_value)
	proto.RegisterType((*ItemInfo)(nil), "feed.api.ItemInfo")
	proto.RegisterMapType((map[string]string)(nil), "feed.api.ItemInfo.ExtraInfoEntry")
	proto.RegisterMapType((map[string]float32)(nil), "feed.api.ItemInfo.PredictScoresEntry")
	proto.RegisterType((*CommonRequest)(nil), "feed.api.CommonRequest")
	proto.RegisterType((*DeviceInfo)(nil), "feed.api.DeviceInfo")
	proto.RegisterType((*LocationInfo)(nil), "feed.api.LocationInfo")
	proto.RegisterType((*NetworkInfo)(nil), "feed.api.NetworkInfo")
	proto.RegisterType((*ItemQueue)(nil), "feed.api.ItemQueue")
	proto.RegisterType((*UserInfo)(nil), "feed.api.UserInfo")
	proto.RegisterType((*HistoryInfo)(nil), "feed.api.HistoryInfo")
	proto.RegisterType((*HistoryTerm)(nil), "feed.api.HistoryTerm")
	proto.RegisterType((*StrategyInfo)(nil), "feed.api.StrategyInfo")
	proto.RegisterMapType((map[string]string)(nil), "feed.api.StrategyInfo.ExtraInfoEntry")
	proto.RegisterMapType((map[string]float64)(nil), "feed.api.StrategyInfo.Tag1DislikeFactorEntry")
	proto.RegisterMapType((map[string]float64)(nil), "feed.api.StrategyInfo.Tag2DislikeFactorEntry")
	proto.RegisterMapType((map[string]float64)(nil), "feed.api.StrategyInfo.Tag3DislikeFactorEntry")
	proto.RegisterType((*FollowInfo)(nil), "feed.api.FollowInfo")
}

func init() { proto.RegisterFile("feed_proto/feed_common.proto", fileDescriptor_3b4505af3af46d7a) }

var fileDescriptor_3b4505af3af46d7a = []byte{
	// 1390 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x57, 0xdd, 0x6e, 0xdb, 0xc6,
	0x12, 0x8e, 0x7e, 0x6c, 0x89, 0x23, 0xc9, 0x56, 0xf6, 0x24, 0x0e, 0x8f, 0x4f, 0xce, 0x39, 0x8e,
	0x80, 0x00, 0x6e, 0x80, 0x3a, 0x88, 0x83, 0x06, 0x41, 0x53, 0xa0, 0x71, 0x64, 0xb9, 0x11, 0xe2,
	0xbf, 0x52, 0x8a, 0x81, 0x16, 0x28, 0x08, 0x9a, 0xbb, 0x96, 0x17, 0x21, 0xb9, 0xcc, 0x72, 0x69,
	0xd7, 0xb9, 0xe9, 0x33, 0x14, 0xe8, 0x45, 0x5f, 0xa6, 0x2f, 0xd0, 0xf7, 0x68, 0x6f, 0xfa, 0x12,
	0xc5, 0xce, 0xae, 0x28, 0xca, 0xb1, 0xe1, 0x8b, 0xf4, 0x6e, 0xe7, 0x9b, 0x9d, 0x6f, 0xe7, 0x67,
	0x67, 0x96, 0x84, 0xfb, 0x27, 0x8c, 0x51, 0x3f, 0x95, 0x42, 0x89, 0xc7, 0xb8, 0x0c, 0x45, 0x1c,
	0x8b, 0x64, 0x03, 0x11, 0xd2, 0xd4, 0xd0, 0x46, 0x90, 0xf2, 0xd5, 0x07, 0xa5, 0x7d, 0xb1, 0x38,
	0xe6, 0x91, 0x9f, 0x67, 0x4c, 0xfa, 0xb1, 0xa0, 0x2c, 0x32, 0x9b, 0x7b, 0x7f, 0xd4, 0xa1, 0x39,
	0x54, 0x2c, 0x1e, 0x26, 0x27, 0x82, 0xdc, 0x83, 0x06, 0x57, 0x2c, 0xf6, 0x39, 0x75, 0x2b, 0x6b,
	0x95, 0x75, 0xc7, 0x5b, 0xd4, 0xe2, 0x90, 0x92, 0xc7, 0xe0, 0xa0, 0x42, 0x5d, 0xa4, 0xcc, 0xad,
	0xae, 0x55, 0xd6, 0x97, 0x36, 0xc9, 0xc6, 0xf4, 0x98, 0x0d, 0x6d, 0x3f, 0xbe, 0x48, 0x99, 0xd7,
	0xe4, 0x76, 0x45, 0xfe, 0x0d, 0x4d, 0x25, 0x83, 0x90, 0x69, 0xaa, 0x1a, 0x52, 0x35, 0x50, 0x1e,
	0x52, 0xf2, 0x12, 0x80, 0xfd, 0xa8, 0x64, 0xe0, 0xf3, 0xe4, 0x44, 0xb8, 0xf5, 0xb5, 0xda, 0x7a,
	0x6b, 0xf3, 0xc1, 0x3c, 0x99, 0x76, 0x66, 0x63, 0xa0, 0x37, 0xe9, 0xd5, 0x20, 0x51, 0xf2, 0xc2,
	0x73, 0xd8, 0x54, 0x26, 0x77, 0x60, 0x41, 0x71, 0x15, 0x31, 0x77, 0x01, 0x99, 0x8d, 0x40, 0x56,
	0x60, 0x31, 0xc8, 0xd5, 0xa9, 0x90, 0xee, 0xa2, 0xf1, 0xdd, 0x48, 0xe4, 0x3f, 0xe0, 0x84, 0xe2,
	0x8c, 0x49, 0x9f, 0xc7, 0x13, 0xb7, 0x81, 0xaa, 0x26, 0x02, 0xc3, 0x78, 0x42, 0x1e, 0xc2, 0xd2,
	0x19, 0xa7, 0x4c, 0xf8, 0x34, 0x97, 0x81, 0xe2, 0x22, 0x71, 0x9b, 0x6b, 0x95, 0xf5, 0xba, 0xd7,
	0x41, 0x74, 0xdb, 0x82, 0x3a, 0x9c, 0x3c, 0xf5, 0x43, 0x91, 0x27, 0xca, 0x75, 0x70, 0x43, 0x23,
	0x4f, 0xfb, 0x5a, 0x24, 0x0f, 0xa0, 0x4d, 0xf3, 0x34, 0xe2, 0x61, 0xa0, 0x30, 0xda, 0xbb, 0x6b,
	0xb5, 0x75, 0xc7, 0x6b, 0x15, 0xd8, 0x90, 0x92, 0x5d, 0x58, 0x4a, 0x25, 0xa3, 0x3c, 0x54, 0x7e,
	0x16, 0x0a, 0xc9, 0x32, 0x77, 0x05, 0xa3, 0x7e, 0x78, 0x45, 0xd4, 0x87, 0x66, 0xe3, 0x08, 0xf7,
	0x99, 0xc8, 0x3b, 0x69, 0x19, 0x23, 0xff, 0x05, 0x78, 0x9f, 0xb3, 0x9c, 0x99, 0x62, 0xdc, 0x43,
	0x6f, 0x1c, 0x44, 0x30, 0xf3, 0x77, 0x61, 0x51, 0xb2, 0x50, 0x7b, 0xe2, 0xa2, 0x27, 0x0b, 0x92,
	0x85, 0x43, 0xba, 0xfa, 0x15, 0x2c, 0xcd, 0x27, 0x94, 0x74, 0xa1, 0xf6, 0x8e, 0x5d, 0xd8, 0x42,
	0xeb, 0xa5, 0xce, 0xeb, 0x59, 0x10, 0xe5, 0xa6, 0xc2, 0x8e, 0x67, 0x84, 0x2f, 0xab, 0xcf, 0x2b,
	0xab, 0x2f, 0x81, 0x7c, 0xec, 0xd8, 0x4d, 0x0c, 0xd5, 0x12, 0x43, 0xef, 0xb7, 0x0a, 0x74, 0xfa,
	0x78, 0x4b, 0x3d, 0xf6, 0x3e, 0x67, 0x99, 0x22, 0x5f, 0x40, 0x8b, 0xb2, 0x33, 0xae, 0xef, 0x88,
	0xbe, 0x08, 0x9a, 0xa5, 0xb5, 0x79, 0x67, 0x96, 0x92, 0x6d, 0x54, 0x6a, 0x7f, 0x3d, 0xa0, 0xc5,
	0x9a, 0xbc, 0x80, 0x4e, 0x24, 0x42, 0x2c, 0x8b, 0x31, 0xac, 0xa2, 0xe1, 0xca, 0xcc, 0x70, 0xd7,
	0xaa, 0xd1, 0xb4, 0x1d, 0x95, 0x24, 0xf2, 0x1c, 0xda, 0x09, 0x53, 0xe7, 0x42, 0xbe, 0x33, 0xb6,
	0x35, 0xb4, 0xbd, 0x3b, 0xb3, 0xdd, 0x37, 0x5a, 0x34, 0x6d, 0x25, 0x33, 0xa1, 0xf7, 0x67, 0x15,
	0x60, 0xe6, 0x91, 0x2e, 0x42, 0x90, 0x50, 0x29, 0x38, 0x9d, 0x35, 0x8b, 0x63, 0x91, 0x21, 0x25,
	0x04, 0xea, 0x3c, 0x66, 0xdc, 0x26, 0x12, 0xd7, 0xda, 0x24, 0xcb, 0x53, 0x26, 0xb1, 0x07, 0xf1,
	0xe4, 0x9a, 0xe7, 0x20, 0xf2, 0x36, 0x63, 0x92, 0xac, 0x42, 0x33, 0x0a, 0x92, 0x49, 0x1e, 0x4c,
	0x98, 0x5b, 0x37, 0xb7, 0x74, 0x2a, 0x93, 0x1e, 0xb4, 0xe3, 0x20, 0xc9, 0x4f, 0x82, 0x50, 0xe5,
	0x92, 0x49, 0x7b, 0xef, 0xe7, 0x30, 0x4d, 0x8f, 0x7d, 0xed, 0x27, 0x41, 0xcc, 0x6c, 0x0b, 0x38,
	0x88, 0xec, 0x07, 0x31, 0xd3, 0x6a, 0x91, 0xf9, 0x67, 0x4c, 0x66, 0xfa, 0x92, 0x9b, 0x36, 0x70,
	0x44, 0x76, 0x64, 0x00, 0xf2, 0x3f, 0x00, 0xc9, 0x32, 0x11, 0xe5, 0x45, 0x0f, 0x38, 0x5e, 0x09,
	0xd1, 0x0d, 0x10, 0x07, 0xa1, 0x1f, 0x50, 0x2a, 0xb1, 0x01, 0x1c, 0xaf, 0x11, 0x07, 0xe1, 0x16,
	0xa5, 0x52, 0xb7, 0x50, 0x18, 0x71, 0x96, 0xa8, 0x82, 0x1d, 0x70, 0x43, 0xc7, 0xa0, 0xd3, 0x13,
	0x08, 0xd4, 0x73, 0xca, 0xa9, 0xdb, 0x32, 0x29, 0xd1, 0x6b, 0x8d, 0x89, 0x80, 0x53, 0xb7, 0x6d,
	0x30, 0xbd, 0xee, 0x51, 0x68, 0x97, 0x0b, 0x48, 0xee, 0x83, 0x13, 0x89, 0x64, 0xc2, 0x55, 0x4e,
	0x19, 0x26, 0xba, 0xea, 0xcd, 0x00, 0x93, 0x35, 0x65, 0x94, 0xe6, 0xce, 0x15, 0xb2, 0xd6, 0x29,
	0x1e, 0xb3, 0x0f, 0x22, 0x61, 0x76, 0x06, 0x15, 0x72, 0xef, 0xaf, 0x0a, 0xb4, 0x4a, 0xb5, 0x36,
	0x05, 0xcb, 0xb8, 0xad, 0x24, 0xae, 0x75, 0x67, 0x4f, 0x2f, 0x4b, 0x31, 0xf7, 0x9c, 0xe2, 0x56,
	0x60, 0xb3, 0x7d, 0x06, 0xdd, 0xe9, 0x16, 0x91, 0x32, 0x19, 0x28, 0x21, 0xed, 0x51, 0xcb, 0x16,
	0x3f, 0xb0, 0xb0, 0x66, 0x4b, 0x4f, 0x45, 0xc2, 0xfc, 0x24, 0x8f, 0x8f, 0x99, 0xb4, 0x35, 0x6e,
	0x21, 0xb6, 0x8f, 0x10, 0x4e, 0x2a, 0x93, 0x49, 0x9e, 0xda, 0x1a, 0x37, 0x0d, 0x30, 0x4c, 0xb5,
	0xf2, 0x9c, 0x9f, 0x70, 0x3f, 0xcb, 0x38, 0xb5, 0xe5, 0x6d, 0x6a, 0x60, 0x94, 0x71, 0xaa, 0xab,
	0x8b, 0xca, 0x63, 0xd4, 0xda, 0xea, 0x6a, 0xe4, 0x95, 0x06, 0x7a, 0x3f, 0x81, 0xa3, 0x07, 0xcc,
	0xb7, 0x7a, 0x48, 0x14, 0xb3, 0x3c, 0xe2, 0x99, 0x72, 0x2b, 0x38, 0x88, 0xc8, 0xc7, 0x83, 0xc8,
	0xcc, 0xf2, 0x5d, 0x9e, 0x29, 0x9d, 0x9b, 0x8c, 0x7f, 0x30, 0xf1, 0x2f, 0x78, 0xb8, 0xd6, 0xc3,
	0xf6, 0x9c, 0xf1, 0xc9, 0xa9, 0xc2, 0x70, 0x17, 0x3c, 0x2b, 0x95, 0xa6, 0x8f, 0x89, 0xcf, 0x4c,
	0x9f, 0xde, 0x1b, 0x68, 0xea, 0x4b, 0x8e, 0xa9, 0xfe, 0x1a, 0xba, 0x3c, 0xcb, 0x72, 0x46, 0xd1,
	0x83, 0x72, 0xf3, 0x97, 0xfa, 0xf0, 0x35, 0xcf, 0x94, 0x90, 0x17, 0xe8, 0xc9, 0x92, 0xd9, 0xae,
	0x7d, 0xc1, 0x56, 0x3c, 0x84, 0x56, 0x49, 0x4d, 0xb6, 0xe0, 0xf6, 0xa9, 0x11, 0x7d, 0xc5, 0xe4,
	0x5c, 0x5c, 0x1f, 0x13, 0x8e, 0x99, 0x8c, 0xbd, 0xe5, 0xd3, 0x99, 0xa0, 0x59, 0x7b, 0xcf, 0x0a,
	0x46, 0x0d, 0x5d, 0xff, 0x0c, 0x2e, 0x41, 0x55, 0x65, 0x98, 0x87, 0xba, 0x57, 0x55, 0x59, 0xef,
	0xf7, 0x45, 0x68, 0x8f, 0x94, 0x0c, 0x14, 0x9b, 0x18, 0x5f, 0x5e, 0x41, 0xf7, 0xf2, 0x3b, 0x6b,
	0x63, 0x73, 0x67, 0xae, 0xec, 0xe9, 0x1d, 0x3a, 0x1d, 0x7b, 0x5a, 0xef, 0x2d, 0xc5, 0x73, 0xb2,
	0x9e, 0x8b, 0x27, 0x22, 0x8a, 0xc4, 0xf9, 0x74, 0xbc, 0xd5, 0xe6, 0xe7, 0xe2, 0x0e, 0x2a, 0xcd,
	0x5c, 0x3c, 0x29, 0xd6, 0xba, 0x0d, 0x53, 0x91, 0x71, 0xc5, 0xcf, 0x98, 0xaf, 0xdd, 0xcd, 0xdc,
	0x1a, 0xce, 0xff, 0xce, 0x14, 0xd5, 0x95, 0xcd, 0xc8, 0x0f, 0xf0, 0x2f, 0x15, 0x4c, 0x9e, 0xfa,
	0x94, 0x67, 0x11, 0x7f, 0xc7, 0x7c, 0x3d, 0x3f, 0xf0, 0xc9, 0xd4, 0xa7, 0x7c, 0x3e, 0x3b, 0xa5,
	0x1c, 0xd6, 0xc6, 0x38, 0x98, 0x3c, 0xdd, 0x36, 0x06, 0x3b, 0xb8, 0xdf, 0x3c, 0x4c, 0xb7, 0xd5,
	0x65, 0xdc, 0xd2, 0x6f, 0x5e, 0xa6, 0x77, 0x6e, 0xa2, 0xdf, 0xbc, 0x86, 0x7e, 0xf3, 0x2a, 0xfa,
	0x27, 0x97, 0xe9, 0xe1, 0x26, 0xfa, 0x27, 0xd7, 0xd0, 0xcf, 0xe3, 0x3a, 0x87, 0xf6, 0x6a, 0x9a,
	0x6f, 0x87, 0xcc, 0x6d, 0x99, 0x1c, 0x1a, 0x74, 0xcb, 0x80, 0x64, 0xfb, 0x8a, 0x2f, 0x98, 0x87,
	0xd7, 0x1c, 0x7e, 0xed, 0x57, 0xcc, 0xea, 0x36, 0xac, 0x5c, 0x9d, 0xd7, 0x9b, 0xde, 0xd5, 0x4a,
	0xf9, 0x65, 0x36, 0x2c, 0x9b, 0xff, 0x08, 0xcb, 0x93, 0x4f, 0x64, 0xf9, 0xa4, 0x6f, 0x8c, 0xde,
	0xaf, 0x15, 0x80, 0x9d, 0xb9, 0xfb, 0x6c, 0xdb, 0x20, 0x0d, 0xa4, 0x4a, 0x98, 0xb4, 0x2c, 0x1d,
	0x83, 0x1e, 0x1a, 0x50, 0x8f, 0xc5, 0x69, 0xb7, 0x50, 0xcb, 0xd9, 0xb4, 0x5d, 0x41, 0x4b, 0x1c,
	0xe1, 0x69, 0x90, 0x24, 0x2c, 0xb2, 0xc3, 0xd9, 0x72, 0xf4, 0x0d, 0x48, 0xfe, 0x5f, 0x74, 0x9c,
	0x7e, 0x1f, 0x70, 0x72, 0xd5, 0xa7, 0xbd, 0x35, 0xe6, 0x31, 0x7b, 0xb4, 0x01, 0x8d, 0x43, 0x29,
	0x68, 0x1e, 0x2a, 0xd2, 0x80, 0x9a, 0x37, 0xe8, 0x77, 0x6f, 0x11, 0x07, 0x16, 0x8e, 0x86, 0xdb,
	0x83, 0x83, 0x6e, 0x85, 0x2c, 0x43, 0x6b, 0x6f, 0xd8, 0xf7, 0x0e, 0x7c, 0x03, 0x54, 0x1f, 0x0d,
	0xa0, 0x31, 0x0a, 0x59, 0xc2, 0x70, 0x64, 0xc0, 0xce, 0xd6, 0x9b, 0x81, 0x3f, 0xea, 0x0f, 0xf6,
	0x07, 0xdd, 0x5b, 0xe4, 0x0e, 0x2c, 0x1f, 0x0d, 0x8f, 0x0e, 0x7c, 0x6f, 0xd0, 0x3f, 0xd8, 0xf3,
	0x0f, 0xb7, 0xbe, 0x19, 0x74, 0x7f, 0x81, 0x4b, 0xe8, 0x78, 0x30, 0x1a, 0x77, 0x7f, 0xde, 0x7f,
	0xf4, 0xc2, 0x7c, 0x9a, 0xe3, 0x4b, 0xd3, 0x01, 0x07, 0x79, 0xc6, 0xdf, 0x1d, 0x6a, 0x9a, 0x65,
	0x68, 0x8d, 0x5e, 0x1f, 0x78, 0x63, 0xbf, 0xe4, 0xc3, 0x68, 0x6f, 0x6b, 0x77, 0xb7, 0xf0, 0xe1,
	0x19, 0xb4, 0x6c, 0x7c, 0x68, 0xdf, 0x85, 0x36, 0xda, 0xf7, 0x5f, 0x6f, 0xed, 0xef, 0x0f, 0x76,
	0xbb, 0xb7, 0x08, 0xc0, 0xe2, 0xe8, 0xf0, 0xc0, 0x1b, 0x8f, 0xba, 0x15, 0x1d, 0xcc, 0xde, 0xdb,
	0xd1, 0xb0, 0xdf, 0xad, 0xbe, 0x82, 0xef, 0x8b, 0xff, 0x87, 0xe3, 0x45, 0xfc, 0x47, 0x78, 0xfa,
	0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa3, 0x00, 0x15, 0xb0, 0x70, 0x0c, 0x00, 0x00,
}
