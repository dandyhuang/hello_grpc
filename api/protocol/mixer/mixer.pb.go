// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.17.2
// source: protocol/mixer/mixer.proto

package mixer

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	common "hello_grpc/api/protocol/common"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RankHttpRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RankHttpRequest) Reset() {
	*x = RankHttpRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_mixer_mixer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RankHttpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RankHttpRequest) ProtoMessage() {}

func (x *RankHttpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_mixer_mixer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RankHttpRequest.ProtoReflect.Descriptor instead.
func (*RankHttpRequest) Descriptor() ([]byte, []int) {
	return file_protocol_mixer_mixer_proto_rawDescGZIP(), []int{0}
}

type RankHttpResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RankHttpResponse) Reset() {
	*x = RankHttpResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_mixer_mixer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RankHttpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RankHttpResponse) ProtoMessage() {}

func (x *RankHttpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_mixer_mixer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RankHttpResponse.ProtoReflect.Descriptor instead.
func (*RankHttpResponse) Descriptor() ([]byte, []int) {
	return file_protocol_mixer_mixer_proto_rawDescGZIP(), []int{1}
}

type RankRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version     int32             `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`                                                                                                                 // 接口版本，用于非兼容接口升级
	ServiceType int32             `protobuf:"varint,2,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"`                                                                                      // enum.proto ServiceType 值
	ReqId       string            `protobuf:"bytes,3,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`                                                                                                         // 请求ID，商业化传过来，不是纯数字
	User        *common.User      `protobuf:"bytes,4,opt,name=user,proto3" json:"user,omitempty"`                                                                                                                        //用户设备信息
	Context     *common.Context   `protobuf:"bytes,5,opt,name=context,proto3" json:"context,omitempty"`                                                                                                                  //推荐上下文
	Recommend   *anypb.Any        `protobuf:"bytes,6,opt,name=recommend,proto3" json:"recommend,omitempty"`                                                                                                              //业务内容
	FlowInfo    *common.FlowInfo  `protobuf:"bytes,7,opt,name=flow_info,json=flowInfo,proto3" json:"flow_info,omitempty"`                                                                                                //流量信息
	MapContext  map[string]string `protobuf:"bytes,99,rep,name=map_context,json=mapContext,proto3" json:"map_context,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //扩展字段，性能不高，字段序号必须小于99
}

func (x *RankRequest) Reset() {
	*x = RankRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_mixer_mixer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RankRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RankRequest) ProtoMessage() {}

func (x *RankRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_mixer_mixer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RankRequest.ProtoReflect.Descriptor instead.
func (*RankRequest) Descriptor() ([]byte, []int) {
	return file_protocol_mixer_mixer_proto_rawDescGZIP(), []int{2}
}

func (x *RankRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *RankRequest) GetServiceType() int32 {
	if x != nil {
		return x.ServiceType
	}
	return 0
}

func (x *RankRequest) GetReqId() string {
	if x != nil {
		return x.ReqId
	}
	return ""
}

func (x *RankRequest) GetUser() *common.User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *RankRequest) GetContext() *common.Context {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *RankRequest) GetRecommend() *anypb.Any {
	if x != nil {
		return x.Recommend
	}
	return nil
}

func (x *RankRequest) GetFlowInfo() *common.FlowInfo {
	if x != nil {
		return x.FlowInfo
	}
	return nil
}

func (x *RankRequest) GetMapContext() map[string]string {
	if x != nil {
		return x.MapContext
	}
	return nil
}

type RankResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version   int32      `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`                     // 接口版本，用于非兼容版本升级
	Ret       int32      `protobuf:"varint,2,opt,name=ret,proto3" json:"ret,omitempty"`                             //返回值0：成功，其他：失败
	Retnum    int32      `protobuf:"varint,3,opt,name=retnum,proto3" json:"retnum,omitempty"`                       // 响应中的广告数
	ReqId     string     `protobuf:"bytes,4,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`             //请求ID，商业化传过来，不是纯数字
	Msg       string     `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg,omitempty"`                              //ret 返回值状态描述
	Recommend *anypb.Any `protobuf:"bytes,6,opt,name=recommend,proto3" json:"recommend,omitempty"`                  //业务响应内容
	DebugInfo *anypb.Any `protobuf:"bytes,7,opt,name=debug_info,json=debugInfo,proto3" json:"debug_info,omitempty"` //debug 调试信息
}

func (x *RankResponse) Reset() {
	*x = RankResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_mixer_mixer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RankResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RankResponse) ProtoMessage() {}

func (x *RankResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_mixer_mixer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RankResponse.ProtoReflect.Descriptor instead.
func (*RankResponse) Descriptor() ([]byte, []int) {
	return file_protocol_mixer_mixer_proto_rawDescGZIP(), []int{3}
}

func (x *RankResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *RankResponse) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *RankResponse) GetRetnum() int32 {
	if x != nil {
		return x.Retnum
	}
	return 0
}

func (x *RankResponse) GetReqId() string {
	if x != nil {
		return x.ReqId
	}
	return ""
}

func (x *RankResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RankResponse) GetRecommend() *anypb.Any {
	if x != nil {
		return x.Recommend
	}
	return nil
}

func (x *RankResponse) GetDebugInfo() *anypb.Any {
	if x != nil {
		return x.DebugInfo
	}
	return nil
}

var File_protocol_mixer_mixer_proto protoreflect.FileDescriptor

var file_protocol_mixer_mixer_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x6d, 0x69, 0x78, 0x65, 0x72,
	0x2f, 0x6d, 0x69, 0x78, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6d, 0x69,
	0x78, 0x65, 0x72, 0x1a, 0x1d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x11, 0x0a, 0x0f, 0x52, 0x61, 0x6e, 0x6b, 0x48, 0x74, 0x74,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x52, 0x61, 0x6e, 0x6b,
	0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x95, 0x03, 0x0a,
	0x0b, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x65, 0x71,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x71, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x12, 0x29, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x32, 0x0a,
	0x09, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x12, 0x2d, 0x0a, 0x09, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x6c,
	0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x43, 0x0a, 0x0b, 0x6d, 0x61, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x63, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x69, 0x78, 0x65, 0x72, 0x2e, 0x52, 0x61,
	0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x61, 0x70, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x6d, 0x61, 0x70, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x1a, 0x3d, 0x0a, 0x0f, 0x4d, 0x61, 0x70, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xe4, 0x01, 0x0a, 0x0c, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x74, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x72, 0x65, 0x74, 0x6e, 0x75, 0x6d, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x65, 0x71,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x71, 0x49, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x32, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x09, 0x72, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x12, 0x33, 0x0a, 0x0a, 0x64, 0x65, 0x62, 0x75, 0x67, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79,
	0x52, 0x09, 0x64, 0x65, 0x62, 0x75, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0x3e, 0x0a, 0x0b, 0x52,
	0x61, 0x6e, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x52, 0x61,
	0x6e, 0x6b, 0x12, 0x12, 0x2e, 0x6d, 0x69, 0x78, 0x65, 0x72, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x6d, 0x69, 0x78, 0x65, 0x72, 0x2e, 0x52,
	0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x84, 0x01, 0x0a, 0x0f,
	0x52, 0x61, 0x6e, 0x6b, 0x48, 0x74, 0x74, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x38, 0x0a, 0x05, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x16, 0x2e, 0x6d, 0x69, 0x78, 0x65, 0x72,
	0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x17, 0x2e, 0x6d, 0x69, 0x78, 0x65, 0x72, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x48, 0x74, 0x74,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x52, 0x61, 0x6e,
	0x6b, 0x12, 0x16, 0x2e, 0x6d, 0x69, 0x78, 0x65, 0x72, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x48, 0x74,
	0x74, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6d, 0x69, 0x78, 0x65,
	0x72, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x29, 0x5a, 0x24, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x5f, 0x67, 0x72, 0x70, 0x63,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x6d, 0x69,
	0x78, 0x65, 0x72, 0x2f, 0x3b, 0x6d, 0x69, 0x78, 0x65, 0x72, 0x80, 0x01, 0x01, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protocol_mixer_mixer_proto_rawDescOnce sync.Once
	file_protocol_mixer_mixer_proto_rawDescData = file_protocol_mixer_mixer_proto_rawDesc
)

func file_protocol_mixer_mixer_proto_rawDescGZIP() []byte {
	file_protocol_mixer_mixer_proto_rawDescOnce.Do(func() {
		file_protocol_mixer_mixer_proto_rawDescData = protoimpl.X.CompressGZIP(file_protocol_mixer_mixer_proto_rawDescData)
	})
	return file_protocol_mixer_mixer_proto_rawDescData
}

var file_protocol_mixer_mixer_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_protocol_mixer_mixer_proto_goTypes = []interface{}{
	(*RankHttpRequest)(nil),  // 0: mixer.RankHttpRequest
	(*RankHttpResponse)(nil), // 1: mixer.RankHttpResponse
	(*RankRequest)(nil),      // 2: mixer.RankRequest
	(*RankResponse)(nil),     // 3: mixer.RankResponse
	nil,                      // 4: mixer.RankRequest.MapContextEntry
	(*common.User)(nil),      // 5: common.User
	(*common.Context)(nil),   // 6: common.Context
	(*anypb.Any)(nil),        // 7: google.protobuf.Any
	(*common.FlowInfo)(nil),  // 8: common.FlowInfo
}
var file_protocol_mixer_mixer_proto_depIdxs = []int32{
	5,  // 0: mixer.RankRequest.user:type_name -> common.User
	6,  // 1: mixer.RankRequest.context:type_name -> common.Context
	7,  // 2: mixer.RankRequest.recommend:type_name -> google.protobuf.Any
	8,  // 3: mixer.RankRequest.flow_info:type_name -> common.FlowInfo
	4,  // 4: mixer.RankRequest.map_context:type_name -> mixer.RankRequest.MapContextEntry
	7,  // 5: mixer.RankResponse.recommend:type_name -> google.protobuf.Any
	7,  // 6: mixer.RankResponse.debug_info:type_name -> google.protobuf.Any
	2,  // 7: mixer.RankService.Rank:input_type -> mixer.RankRequest
	0,  // 8: mixer.RankHttpService.Check:input_type -> mixer.RankHttpRequest
	0,  // 9: mixer.RankHttpService.Rank:input_type -> mixer.RankHttpRequest
	3,  // 10: mixer.RankService.Rank:output_type -> mixer.RankResponse
	1,  // 11: mixer.RankHttpService.Check:output_type -> mixer.RankHttpResponse
	1,  // 12: mixer.RankHttpService.Rank:output_type -> mixer.RankHttpResponse
	10, // [10:13] is the sub-list for method output_type
	7,  // [7:10] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_protocol_mixer_mixer_proto_init() }
func file_protocol_mixer_mixer_proto_init() {
	if File_protocol_mixer_mixer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protocol_mixer_mixer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RankHttpRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_mixer_mixer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RankHttpResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_mixer_mixer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RankRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_mixer_mixer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RankResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protocol_mixer_mixer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_protocol_mixer_mixer_proto_goTypes,
		DependencyIndexes: file_protocol_mixer_mixer_proto_depIdxs,
		MessageInfos:      file_protocol_mixer_mixer_proto_msgTypes,
	}.Build()
	File_protocol_mixer_mixer_proto = out.File
	file_protocol_mixer_mixer_proto_rawDesc = nil
	file_protocol_mixer_mixer_proto_goTypes = nil
	file_protocol_mixer_mixer_proto_depIdxs = nil
}
